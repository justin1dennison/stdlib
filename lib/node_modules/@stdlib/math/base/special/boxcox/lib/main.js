/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var abs = require( '@stdlib/math/base/special/abs' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );
var ln = require( '@stdlib/math/base/special/ln' );
var expm1 = require( '@stdlib/math/base/special/expm1' );
var NINF = require( '@stdlib/constants/math/float64-ninf' );


// MAIN //

/**
 * Computes the Box-Cox transformation.
 *
 * @param {number} x - input value
 * @param {number} lambda - power parameter
 * @returns {number} Box-Cox transformation
 */
function boxcox(x, lambda) {
	if ( isnan( x ) || isnan( lambda ) ) {
		return NaN;
	}
	if ( isPositiveZero( x ) && lambda < 0.0 ) {
		return NINF;
	}
	if ( abs( lambda ) < 1e-19 ) {
		return ln( x );
	}
	return expm1( lambda * ln( x ) ) / lambda;
}


// EXPORTS //

module.exports = boxcox;
